version: '3'

services:
  dataquire:
    image: postgres
    container_name: dataquire
    restart: always
    environment:
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_PASSWORD=1337'
      - 'POSTGRES_DB=users'

  dataquire-rabbit:
    image: rabbitmq:3.11.8-management
    container_name: dataquire-rabbit
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq

  dataquire-eureka-server:
    build:
      dockerfile: ./Dataquire-Eureka-Server/Dockerfile
      context: .
    image: dataquire-eureka-server
    container_name: 'dataquire-eureka-server'
    restart: always
    ports:
      - "8761:8761"

  dataquire-gateway:
    build:
      dockerfile: ./Dataquire-Gateway/Dockerfile
      context: .
    image: dataquire-gateway
    container_name: 'dataquire-gateway'
    restart: always
    ports:
      - "80:8081"

  authorization-service:
    build:
      context: ./
      dockerfile: Authorization-Service/Dockerfile
    image: authorization-service
    container_name: 'authorization-service'
    restart: always
    ports:
      - "587:587"

  instance-keeper:
    build:
      context: ./
      dockerfile: Instance-Keeper/Dockerfile
    image: instance-keeper
    container_name: 'instance-keeper'
    restart: always

  database-manager:
    build:
      dockerfile: ./Database-Manager/Dockerfile
      context: .
    image: database-manager
    container_name: 'database-manager'

  query-creator:
    build:
      dockerfile: ./Query-Creator/Dockerfile
      context: .
    image: query-creator
    container_name: 'query-creator'

  query-executor:
    build:
      dockerfile: ./Query-Executor/Dockerfile
      context: .
    image: query-executor
    container_name: 'query-executor'

  table-manager:
    build:
      dockerfile: ./Table-Manager/Dockerfile
      context: .
    image: table-manager
    container_name: 'table-manager'